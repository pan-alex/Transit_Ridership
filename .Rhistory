# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
ggplot(maryland_by_year) +
geom_col(aes(x = Year, y = mean, fill = 'orange', alpha = 0.6)) +
# geom_point() +
# geom_line(alpha = 0.6, size = 1) +
# geom_errorbar(aes(ymin = mean - sd,
#                   ymax = mean + sd),
#               width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_col(aes(x = Year, y = mean_intracity, fill = 'blue', alpha = 0.6))
# geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
#                   ymax = mean_intracity + sd_intracity),
#               width = 0.2, alpha = 0.3)
# scale_x_continuous(breaks = seq(2006, 2017)) +
# ylim(c(0, 450000)) +
# theme(axis.title.y = element_blank(),
#       axis.text.x = element_text(angle = 45, hjust = 1))
# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
ggplot(maryland_by_year) +
geom_col(aes(x = Year, y = mean, fill = 'red', alpha = 0.6)) +
# geom_point() +
# geom_line(alpha = 0.6, size = 1) +
# geom_errorbar(aes(ymin = mean - sd,
#                   ymax = mean + sd),
#               width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_col(aes(x = Year, y = mean_intracity, fill = 'blue', alpha = 0.6))
# geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
#                   ymax = mean_intracity + sd_intracity),
#               width = 0.2, alpha = 0.3)
# scale_x_continuous(breaks = seq(2006, 2017)) +
# ylim(c(0, 450000)) +
# theme(axis.title.y = element_blank(),
#       axis.text.x = element_text(angle = 45, hjust = 1))
# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
ggplot(maryland_by_year) +
geom_col(aes(x = Year, y = mean, alpha = 0.6)) +
# geom_point() +
# geom_line(alpha = 0.6, size = 1) +
# geom_errorbar(aes(ymin = mean - sd,
#                   ymax = mean + sd),
#               width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_col(aes(x = Year, y = mean_intracity, alpha = 0.6))
# geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
#                   ymax = mean_intracity + sd_intracity),
#               width = 0.2, alpha = 0.3)
# scale_x_continuous(breaks = seq(2006, 2017)) +
# ylim(c(0, 450000)) +
# theme(axis.title.y = element_blank(),
#       axis.text.x = element_text(angle = 45, hjust = 1))
# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
gridExtra::grid.arrange(p1, p2, ncol = 2)
# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
gridExtra::grid.arrange(p1, p2, ncol = 2)
# New calculation of total ridership without MARC, Commuter bus, and ICC
maryland <- maryland %>%
mutate(ridership_intracity = bus + metro + light_rail + mobility + taxi_access)
maryland_by_year <- maryland %>% group_by(Year) %>%
summarize(mean = mean(total_average_weekday_ridership),
sd = sd(total_average_weekday_ridership),
mean_intracity = mean(ridership_intracity),
sd_intracity = sd(ridership_intracity))
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
gridExtra::grid.arrange(p1, p2, ncol = 2)
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = 'All Transit (including MARC, CB, and ICC')
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
title('All Transit (including MARC, CB, and ICC')
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text('All Transit (including MARC, CB, and ICC'))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text('Intracity Transit Only'))
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text('All Transit (including MARC, CB, and ICC'))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text('Intracity Transit Only'))
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ggtitle('All Transit (including MARC, CB, and ICC') +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
ggtitlt('Intracity Transit Only') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1) +
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ggtitle('All Transit (including MARC, CB, and ICC') +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
ggtitlt('Intracity Transit Only') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ggtitle('All Transit (including MARC, CB, and ICC') +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
ggtitlt('Intracity Transit Only') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
# Compare all trips
p1 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean) +
geom_col(fill = 'orange', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean - sd,
ymax = mean + sd),
width = 0.2, alpha = 0.3) +
ggtitle('All Transit (including MARC, CB, and ICC') +
ylab('Mean Monthly Ridership') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2 <- ggplot(maryland_by_year) +
aes(x = Year, y = mean_intracity) +
geom_col(fill = 'blue', alpha = 0.5) +
geom_point() +
geom_line(alpha = 0.6, size = 1) +
geom_errorbar(aes(ymin = mean_intracity - sd_intracity,
ymax = mean_intracity + sd_intracity),
width = 0.2, alpha = 0.3) +
ggtitle('Intracity Transit Only') +
scale_x_continuous(breaks = seq(2006, 2017)) +
ylim(c(0, 450000)) +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
gridExtra::grid.arrange(p1, p2, ncol = 2)
ggplot(maryland) +
aes(x = DateTime, y = maryland$ridership_intracity) +
geom_point(alpha = 0.6) +
ylab('Monthly Ridership')
ggplot(maryland) +
aes(x = DateTime, y = intracity_ridership, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
summer_months <- as.factor(
ifelse(!(edmonton$Month %in% seq(5,8)), 'Other', month.abb[edmonton$Month]))
# Highlight summer months
p2 <- ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity) +
geom_line(aes(group = Month, col = summer_months), alpha = 0.6) +
scale_colour_manual('Months', values = palette) +
geom_point(aes(col = summer_months), alpha = 0.6) +
ylab('Monthly Ridership')
gridExtra::grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
summer_months <- as.factor(
ifelse(!(edmonton$Month %in% seq(5,8)), 'Other', month.abb[edmonton$Month]))
# Highlight summer months
p2 <- ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity) +
geom_line(aes(group = Month, col = summer_months), alpha = 0.6) +
scale_colour_manual('Months', values = palette) +
geom_point(aes(col = summer_months), alpha = 0.6) +
ylab('Monthly Ridership')
gridExtra::grid.arrange(p1, p2, ncol = 2)
p1
p2
p1 <- ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
summer_months <- as.factor(
ifelse(!(maryland$Month %in% seq(5,8)), 'Other', month.abb[maryland$Month]))
# Highlight summer months
p2 <- ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity) +
geom_line(aes(group = Month, col = summer_months), alpha = 0.6) +
scale_colour_manual('Months', values = palette) +
geom_point(aes(col = summer_months), alpha = 0.6) +
ylab('Monthly Ridership')
p1
p2
# gridExtra::grid.arrange(p1, p2, ncol = 2)
ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
ggplot(maryland) +
aes(x = DateTime, y = ridership_intracity, col = month.abb[Month]) +
geom_point(alpha = 0.6) +
geom_line(aes(group = month.abb[Month]), alpha = 0.6) +
ylab('Monthly Ridership')
# Plot each NA as a bar, sorted by date.
# Sort by date
maryland <- maryland %>% arrange(DateTime)
# Find if entry is missing
x <- as.matrix(is.na(maryland))
# Name columns to match year. To prevent congestion of the axis, only name rows
# that correspond to January (i.e. Month == 1)
dimnames(x)[[1]] <- ifelse(maryland$Month == 1, maryland$Year, NA)
# Reshape matrix x into a single column of data
x <- reshape2::melt(x)
ggplot(x, aes(x = Var2, y = Var1, fill = value)) +
geom_tile() +
scale_fill_brewer() +
ylab('Year') + xlab('') +
theme(legend.position = "none",
axis.text.x = element_text(angle=45, hjust = 1))
ggplot(maryland) +
aes(x = DateTime, y = maryland$ridership_intracity) +
geom_point(alpha = 0.6) +
ylab('Monthly Ridership') +
xlim(c(2007, 2017)
ggplot(maryland) +
aes(x = DateTime, y = maryland$ridership_intracity) +
geom_point(alpha = 0.6) +
ylab('Monthly Ridership') +
xlim(c(2007, 2017))
getwd()
setwd('R/Transit_ridership')
